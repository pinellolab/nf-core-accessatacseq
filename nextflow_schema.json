{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/accessatacseq/master/nextflow_schema.json",
    "title": "nf-core/accessatacseq pipeline parameters",
    "description": "A pipeline for ACCESS-ATAC processing",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/accessatacseq/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "fasta_index": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?.fai$",
                    "description": "Path to Fasta index file.",
                    "help_text": "The FASTA index file (`.fa.fai`) is only needed when using the bwa_meth aligner. It is used by MethylDackel. If using Bismark this parameter is ignored.",
                    "fa_icon": "fas fa-bookmark"
                },
                "bwameth_index": {
                    "type": "string",
                    "format": "path",
                    "description": "bwameth index filename base",
                    "help_text": "Directory for a bwa-meth genome reference index. Only used when using the bwa-meth aligner.\n\nNote that this is not a complete path, but the directory containing the reference. For example, if you have file paths such as `/path/to/ref/genome.fa.bwameth.c2t.bwt`, you should specify `/path/to/ref/`.",
                    "fa_icon": "far fa-dot-circle"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The base path to the igenomes reference files",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "default": "s3://ngi-igenomes/igenomes/"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        },
        "save_intermediate_files": {
            "title": "Save intermediate files",
            "type": "object",
            "description": "Options for saving a variety of intermediate files",
            "default": "",
            "properties": {
                "save_reference": {
                    "type": "boolean",
                    "description": "Save reference(s) to results directory",
                    "fa_icon": "far fa-save"
                },
                "save_align_intermeds": {
                    "type": "boolean",
                    "description": "Save aligned intermediates to results directory",
                    "fa_icon": "fas fa-save"
                },
                "unmapped": {
                    "type": "boolean",
                    "description": "Bismark only - Save unmapped reads to FastQ files",
                    "help_text": "Use the `--unmapped` flag to set the `--unmapped` flag with Bismark align and save the unmapped reads to FastQ files.",
                    "fa_icon": "fas fa-recycle"
                },
                "save_trimmed": {
                    "type": "boolean",
                    "description": "Save trimmed reads to results directory.",
                    "fa_icon": "fas fa-cut",
                    "help_text": "By default, trimmed FastQ files will not be saved to the results directory. Specify this flag (or set to true in your config file) to copy these files to the results directory when complete."
                }
            },
            "fa_icon": "fas fa-save"
        },
        "bwameth_options": {
            "title": "bwa-meth options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "use_gpu": {
                    "type": "boolean",
                    "description": "Run Parabricks GPU-accelerated fq2bammeth module for alignment",
                    "default": false,
                    "fa_icon": "fas fa-dot-circle"
                },
                "min_depth": {
                    "type": "integer",
                    "description": "Specify a minimum read coverage for MethylDackel to report a methylation call.",
                    "default": 0,
                    "fa_icon": "fas fa-angle-double-down"
                },
                "ignore_flags": {
                    "type": "boolean",
                    "description": "MethylDackel - ignore SAM flags",
                    "fa_icon": "fas fa-eye-slash",
                    "help_text": "Run MethylDackel with the `--ignore_flags` option, to ignore SAM flags."
                },
                "methyl_kit": {
                    "type": "boolean",
                    "description": "Save files for use with methylKit",
                    "help_text": "Run MethylDackel with the `--methyl_kit` option, to produce files suitable for use with the methylKit R package.",
                    "fa_icon": "fas fa-ellipsis-h"
                }
            },
            "fa_icon": "far fa-circle"
        },
        "run_pipeline_steps": {
            "title": "Run pipeline steps",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "run_preseq": {
                    "type": "boolean",
                    "description": "Run preseq/lcextrap tool",
                    "fa_icon": "fas fa-fast-forward"
                },
                "run_qualimap": {
                    "type": "boolean",
                    "description": "Run qualimap/bamqc tool",
                    "fa_icon": "fas fa-fast-forward"
                }
            },
            "fa_icon": "fas fa-fast-forward"
        },
        "qualimap_options": {
            "title": "Qualimap Options",
            "type": "object",
            "description": "Qualimap configurations",
            "default": "",
            "properties": {
                "bamqc_regions_file": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.gff|\\.bed(\\.gz)?$",
                    "description": "A GFF or BED file containing the target regions which will be passed to Qualimap/Bamqc.",
                    "help_text": "Setting this option could be useful if you want calculate coverage stats over a list of regions, i.e. for targeted methylation sequencing data."
                }
            }
        },
        "special_library_types": {
            "title": "Special library types",
            "type": "object",
            "description": "Presets for working with specific bisulfite library preparation methods.",
            "default": "",
            "properties": {
                "pbat": {
                    "type": "boolean",
                    "fa_icon": "fas fa-outdent",
                    "description": "Preset for working with PBAT libraries.",
                    "help_text": "Specify this parameter when working with PBAT _(Post Bisulfite Adapter Tagging)_ libraries.\n\nUsing this parameter sets the `--pbat` flag when aligning with Bismark. This tells Bismark to align complementary strands (the opposite of `--directional`).\n\nAdditionally, this is a trimming preset equivalent to `--clip_r1 6` `--clip_r2 9` `--three_prime_clip_r1 6` `--three_prime_clip_r2 9`"
                },
                "rrbs": {
                    "type": "boolean",
                    "description": "Turn on if dealing with MspI digested material.",
                    "help_text": "Use this parameter when working with RRBS _(Reduced Representation Bisulfite Sequencing)_ data, that is digested using MspI.\n\nSpecifying `--rrbs` will pass on the `--rrbs` parameter to TrimGalore! See the [TrimGalore! documentation](https://github.com/FelixKrueger/TrimGalore/blob/master/Docs/Trim_Galore_User_Guide.md#rrbs-specific-options-mspi-digested-material) to read more about the effects of this option.\n\nThis parameter also makes the pipeline skip the deduplication step.",
                    "fa_icon": "fas fa-compress"
                },
                "slamseq": {
                    "type": "boolean",
                    "description": "Run bismark in SLAM-seq mode.",
                    "fa_icon": "fas fa-wave-square",
                    "help_text": "Specify to run Bismark with the `--slam` flag to run bismark in [SLAM-seq mode](https://github.com/FelixKrueger/Bismark/blob/master/CHANGELOG.md#slam-seq-mode) \n\n> NB: Only works with when using the `bismark_hisat` aligner (`--aligner bismark_hisat`)"
                },
                "em_seq": {
                    "type": "boolean",
                    "fa_icon": "fas fa-cubes",
                    "description": "Preset for EM-seq libraries.",
                    "help_text": "Equivalent to `--clip_r1 10` `--clip_r2 10` `--three_prime_clip_r1 10` `--three_prime_clip_r2 10`.\n\nAlso sets the `--maxins` flag to `1000` for Bismark."
                },
                "single_cell": {
                    "type": "boolean",
                    "fa_icon": "fas fa-cut",
                    "description": "Trimming preset for single-cell bisulfite libraries.",
                    "help_text": "Equivalent to `--clip_r1 6` `--clip_r2 6` `--three_prime_clip_r1 6` `--three_prime_clip_r2 6`.\n\nAlso sets the `--non_directional` flag for Bismark."
                },
                "accel": {
                    "type": "boolean",
                    "fa_icon": "fas fa-cut",
                    "help_text": "Equivalent to `--clip_r1 10` `--clip_r2 15` `--three_prime_clip_r1 10` `--three_prime_clip_r2 10`",
                    "description": "Trimming preset for the Accel kit."
                },
                "cegx": {
                    "type": "boolean",
                    "fa_icon": "fas fa-cut",
                    "description": "Trimming preset for the CEGX bisulfite kit.",
                    "help_text": "Equivalent to `--clip_r1 6` `--clip_r2 6` `--three_prime_clip_r1 2` `--three_prime_clip_r2 2`"
                },
                "epignome": {
                    "type": "boolean",
                    "fa_icon": "fas fa-cut",
                    "description": "Trimming preset for the Epignome kit.",
                    "help_text": "Equivalent to `--clip_r1 8` `--clip_r2 8` `--three_prime_clip_r1 8` `--three_prime_clip_r2 8`"
                },
                "zymo": {
                    "type": "boolean",
                    "fa_icon": "fas fa-cut",
                    "description": "Trimming preset for the Zymo kit.",
                    "help_text": "Equivalent to `--clip_r1 10` `--clip_r2 10` `--three_prime_clip_r1 10` `--three_prime_clip_r2 10`.\n\nAlso sets the `--non_directional` flag for Bismark."
                }
            },
            "fa_icon": "fas fa-prescription-bottle"
        },
        "adapter_trimming": {
            "title": "Adapter Trimming",
            "type": "object",
            "description": "Bisulfite libraries often require additional base pairs to be removed from the ends of the reads before alignment.",
            "default": "",
            "properties": {
                "clip_r1": {
                    "type": "integer",
                    "description": "Trim bases from the 5' end of read 1 (or single-end reads).",
                    "default": 0,
                    "fa_icon": "fas fa-cut"
                },
                "clip_r2": {
                    "type": "integer",
                    "description": "Trim bases from the 5' end of read 2 (paired-end only).",
                    "default": 0,
                    "fa_icon": "fas fa-cut"
                },
                "three_prime_clip_r1": {
                    "type": "integer",
                    "description": "Trim bases from the 3' end of read 1 AFTER adapter/quality trimming.",
                    "default": 0,
                    "fa_icon": "fas fa-cut"
                },
                "three_prime_clip_r2": {
                    "type": "integer",
                    "description": "Trim bases from the 3' end of read 2 AFTER adapter/quality trimming",
                    "default": 0,
                    "fa_icon": "fas fa-cut"
                },
                "nextseq_trim": {
                    "type": "integer",
                    "default": 0,
                    "description": "Trim bases below this quality value from the 3' end of the read, ignoring high-quality G bases"
                },
                "length_trim": {
                    "type": "integer",
                    "description": "Discard reads that become shorter than INT because of either quality or adapter trimming.",
                    "fa_icon": "fas fa-trash-alt"
                }
            },
            "fa_icon": "fas fa-cut",
            "help_text": "In addition to manually specifying bases to be specified, the pipeline has a number of parameter presets:\n\n| Parameter       | 5' R1 Trim | 5' R2 Trim | 3' R1 Trim | 3' R2 Trim |\n|-----------------|------------|------------|------------|------------|\n| `--pbat`        | 6          | 9          | 6          | 9          |\n| `--single_cell` | 6          | 6          | 6          | 6          |\n| `--epignome`    | 8          | 8          | 8          | 8          |\n| `--accel`       | 10         | 15         | 10         | 10         |\n| `--zymo`        | 10         | 15         | 10         | 10         |\n| `--cegx`        | 6          | 6          | 2          | 2          |\n\nNote that you can use the `--skip_trimming` parameter to skip trimming completely."
        },
        "skip_pipeline_steps": {
            "title": "Skip pipeline steps",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "skip_trimming": {
                    "type": "boolean",
                    "description": "Skip read trimming.",
                    "fa_icon": "fas fa-fast-forward"
                },
                "skip_deduplication": {
                    "type": "boolean",
                    "description": "Skip deduplication step after alignment.",
                    "help_text": "Deduplication removes PCR duplicate reads after alignment. Specifying this option will skip this step, leaving duplicate reads in your data.\n\nNote that this is turned on automatically if `--rrbs` is specified.",
                    "fa_icon": "fas fa-fast-forward"
                },
                "skip_multiqc": {
                    "type": "boolean",
                    "description": "Skip MultiQC"
                },
                "skip_atac_qc": {
                    "type": "boolean",
                    "description": "Skip ATAC signal quality check"
                },
                "skip_access_qc": {
                    "type": "boolean",
                    "description": "Skip ACCESS signal quality check"
                }
            },
            "fa_icon": "fas fa-fast-forward"
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
