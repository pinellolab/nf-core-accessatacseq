/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// General configuration options
//

process {
    withName: FASTQC {
        ext.args = '--quiet'
        publishDir = [
            [
                path: { "${params.outdir}/fastqc" },
                mode: params.publish_dir_mode,
                pattern: "*.html"
            ],
            [
                path: { "${params.outdir}/fastqc/zips" },
                mode: params.publish_dir_mode,
                pattern: "*.zip"
            ]
        ]
    }
}

process {
    withName: SAMTOOLS_SORT {
        ext.prefix = params.skip_deduplication ? { "${meta.id}.sorted" } : { "${meta.id}.deduplicated.sorted" }
        publishDir = [
            [
                path: { "${params.outdir}/deduplicated/" },
                mode: params.publish_dir_mode,
                pattern: "*.deduplicated.sorted.bam",
                enabled: params.save_align_intermeds
            ],
            [
                path: { "${params.outdir}/alignments/" },
                mode: params.publish_dir_mode,
                pattern: "*.sorted.bam",
                enabled: params.skip_deduplication
            ],
            [
                path: { "${params.outdir}/deduplicated/" },
                mode: params.publish_dir_mode,
                pattern: "*markdup*.bam",
                enabled: params.save_align_intermeds
            ],
            [
                path: { "${params.outdir}/alignments/" },
                mode: params.publish_dir_mode,
                pattern: "*.bam",
                enabled: params.save_align_intermeds
            ]
        ]
    }
}

process {
    withName: SAMTOOLS_INDEX {
        ext.prefix = ""
        publishDir = [
            [
                path: { "${params.outdir}/deduplicated/" },
                mode: params.publish_dir_mode,
                pattern: "*.bai",
                enabled: !params.skip_deduplication
            ],
            [
                path: { "${params.outdir}/alignments/" },
                mode: params.publish_dir_mode,
                pattern: "*.bai",
                enabled: params.skip_deduplication
            ]
        ]
    }
}

process {

    withName: SAMTOOLS_INDEX_ALIGNMENTS {
        ext.args = ""
        publishDir = [
            [
                path: { "${params.outdir}/alignments/" },
                mode: params.publish_dir_mode,
                pattern: "*.bam.bai",
                enabled: params.save_align_intermeds
            ]
        ]
    }

    withName: SAMTOOLS_INDEX_DEDUPLICATED {
        ext.args = ""
        publishDir = [
            [
                path: { "${params.outdir}/deduplicated/" },
                mode: params.publish_dir_mode,
                pattern: "*.bam.bai"
            ]
        ]
    }

}

process {
    withName: PICARD_MARKDUPLICATES {
        ext.args = "--ASSUME_SORTED true --REMOVE_DUPLICATES false --VALIDATION_STRINGENCY LENIENT --PROGRAM_RECORD_ID 'null' --TMP_DIR tmp"
        ext.prefix = { "${meta.id}.markdup.sorted" }
        publishDir = [
            [
                path: { "${params.outdir}/deduplicated/picard_metrics" },
                pattern: "*.metrics.txt",
                mode: params.publish_dir_mode
            ],
            [
                path: { "${params.outdir}/deduplicated" },
                pattern: "*.bam",
                mode: params.publish_dir_mode
            ]
        ]
    }
}


process {
    withName: TRIMGALORE {
        ext.args = { [
            // Static args
            '--fastqc',

            // Special flags
            params.rrbs ? '--rrbs' : '',
            params.nextseq_trim > 0 ? "--nextseq ${params.nextseq_trim}" : '',
            params.length_trim ? "--length ${params.length_trim}" : '',

            // Trimming - R1
            params.clip_r1 > 0 ? "--clip_r1 ${params.clip_r1}" : (
                params.pbat ? "--clip_r1 9" : (
                    (params.single_cell || params.cegx) ? "--clip_r1 6" : (
                        params.epignome ? "--clip_r1 8" : (
                            (params.accel || params.zymo || params.em_seq) ? "--clip_r1 10" : ''
                        )
                    )
                )
            ),

            // Trimming - R2
            meta.single_end ? '' : (
                params.clip_r2 > 0 ? "--clip_r2 ${params.clip_r2}" : (
                    params.pbat ? "--clip_r2 9" : (
                        (params.single_cell || params.cegx) ? "--clip_r2 6" : (
                            params.epignome ? "--clip_r2 8" : (
                                (params.zymo || params.em_seq) ? "--clip_r2 10" : (
                                    params.accel ? "--clip_r2 15" : ''
                                )
                            )
                        )
                    )
                )
            ),

            // Trimming - 3' R1
            params.three_prime_clip_r1 > 0 ? "--three_prime_clip_r1 ${params.three_prime_clip_r1}" : (
                params.pbat ? "--three_prime_clip_r1 9" : (
                    params.single_cell ? "--three_prime_clip_r1 6" : (
                        params.cegx ? "--three_prime_clip_r1 2" : (
                            params.epignome ? "--three_prime_clip_r1 8" : (
                                (params.accel || params.zymo || params.em_seq) ? "--three_prime_clip_r1 10" : ''
                            )
                        )
                    )
                )
            ),

            // Trimming - 3' R2
            meta.single_end ? '' : (
                params.three_prime_clip_r2 > 0 ? "--three_prime_clip_r2 ${params.three_prime_clip_r2}" : (
                    params.pbat ? "--three_prime_clip_r2 9" : (
                        params.single_cell ? "--three_prime_clip_r2 6" : (
                            params.cegx ? "--three_prime_clip_r2 2" : (
                                params.epignome ? "--three_prime_clip_r2 8" : (
                                    (params.accel || params.zymo || params.em_seq) ? "--three_prime_clip_r2 10" : ''
                                )
                            )
                        )
                    )
                )
            ),
        ].join(' ').trim() }
        publishDir = [
            [
                path: { "${params.outdir}/trimgalore/fastqc" },
                mode: params.publish_dir_mode,
                pattern: "*.html"
            ],
            [
                path: { "${params.outdir}/trimgalore/fastqc/zips" },
                mode: params.publish_dir_mode,
                pattern: "*.zip"
            ],
            [
                path: { "${params.outdir}/trimgalore" },
                mode: params.publish_dir_mode,
                pattern: "*.fq.gz",
                enabled: params.save_trimmed
            ],
            [
                path: { "${params.outdir}/trimgalore/logs" },
                mode: params.publish_dir_mode,
                pattern: "*.txt"
            ]
        ]
    }
}


process {
    withName: QUALIMAP_BAMQC {
        ext.args = [
            params.genome.toString().startsWith('GRCh') ? '-gd HUMAN' : '',
            params.genome.toString().startsWith('GRCm') ? '-gd MOUSE' : ''
        ].join(" ").trim()
        publishDir = [
            [
                path: { "${params.outdir}/qualimap/bamqc/" },
                mode: params.publish_dir_mode,
                pattern: "*",
                enabled: params.run_qualimap
            ]
        ]
    }
}


process {
    withName: PRESEQ_LCEXTRAP {
        ext.args = " -verbose -bam"
        publishDir = [
            [
                path: { "${params.outdir}/preseq" },
                mode: params.publish_dir_mode,
                pattern: "*.txt",
                enabled: params.run_preseq
            ],
            [
                path: { "${params.outdir}/preseq/log" },
                mode: params.publish_dir_mode,
                pattern: "*.log",
                enabled: params.run_preseq
            ]
        ]
    }
}

process {
    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

process {
    withName: BWAMETH_ALIGN {
        cache = 'lenient' // This is set because in the module command the index files are touched so as to have bwameth not complain
        ext.args = ''
        publishDir = [
                path: { "${params.outdir}/alignments" },
                pattern: "*.bam",
                mode: params.publish_dir_mode,
                enabled: params.save_align_intermeds
        ]
    }
}
